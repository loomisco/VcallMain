//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
namespace Vcall.Models
{
    using System;
    using System.Collections.Generic;

    public partial class Vcall_Client
    {
        public Nullable<long> Customer_Id_FK { get; set; }

        [Required]
        [RegularExpression(@"\d{9}", ErrorMessage = "Invalid Policy Number")]
        [Display(Name = "Policy #")]
        public string Client_PID { get; set; }
        [Required]
        [MaxLength(50)]
        [Display(Name = "First Name")]
        public string Client_Fname { get; set; }

        [MaxLength(2)]
        [Display(Name = "Middle Initial")]
        public string Client_MI { get; set; }
        [Required]
        [MaxLength(100)]
        [Display(Name = "Last Name")]
        public string Client_Lname { get; set; }
        [Required]
        [Display(Name = "Date of Birth")]
        [MaxLength(10)]
        [RegularExpression(@"^([0]\d|[1][0-2])\/([0-2]\d|[3][0-1])\/([2][01]|[1][6-9])\d{2}(\s([0-1]\d|[2][0-3])(\:[0-5]\d){1,2})?$",
            ErrorMessage = "The Date of Birth must be in the mm/dd/yyyy format")]




        public string Client_DOB { get; set; }
        [Required]
        [RegularExpression("^[a-zA-Z0-9_\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$", ErrorMessage = "E-mail is not valid")]
        [Display(Name = "Email")]

        
        public string Client_Email { get; set; }
        [Required]
        [MaxLength(15)]
        [Display(Name = "Phone")]
        [RegularExpression("^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$", ErrorMessage = "You must provide a proper phone number.")]
        public string Client_Phone { get; set; }

        [Display(Name = "Employee Id")]
        [MaxLength(15)]
        public string Client_Other_Pid { get; set; } 


        public long Id { get; set; }
    }
}
